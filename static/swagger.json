{
	"openapi": "3.0.0",
	"info": {
		"description": "devops",
		"version": "1.0.0",
		"title": "Devops-flask-project",
		"contact": {
			"email": "something@gmail.com"
		},
		"license": {
			"name": "MIT",
			"url": "https://opensource.org/licenses/MIT"
		}
	},
	"servers": [
		{
			"url": "/"
		}
	],
	"tags": [
		{
			"name": "Properties Request",
			"description": "Example API for Properties requests"
		}
	],
	"paths": {
		"/properties": {
			"get": {
				"tags": [
					"Properties Request"
				],
				"summary": "Returns entries in properties table",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/components/schemas/propertiesSchema"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Properties Request"
				],
				"summary": "Create a new property request",
				"parameters": [
					{
						"in": "header",
						"name": "Api-Key",
						"schema": {
							"type": "string",
							"format": "string"
						},
						"required": true
					}
				],
				"requestBody": {
					"description": "Property Request Post Object",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/propertyRequestPostBody"
							}
						}
					}
				},
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/components/schemas/id"
						}
					},
					"400": {
						"description": "Failed. Bad post data."
					}
				}
			}
		},

		"/properties/{id}": {
			"parameters": [
				{
					"name": "id",
					"in": "path",
					"required": true,
					"description": "ID of the cat that we want to match",
					"type": "number"
				}
			],
			"get": {
				"tags": [
					"Properties Request"
				],
				"summary": "Returns an entry in properties table",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"description": "Book Request id",
						"schema": {
							"$ref": "#/components/schemas/id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/components/schemas/propertiesSchema"
						}
					},
					"400": {
						"description": "Failed. Misunderstood Request."
					},
					"404": {
						"description": "Failed. Property request not found."
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"id": {
				"properties": {
					"uuid": {
						"type": "number"
					}
				}
			},
			"propertyRequestPostBody": {
				"type": "object",
				"properties": {
					"address": {
						"type": "string",
						"format": "string"
					},
					"city": {
						"type": "string",
						"format": "string"
					},
					"state": {
						"type": "string",
						"format": "string"
					},
					"zip": {
						"type": "string",
						"format": "string"
					}

				}
			},
			"propertiesSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number",
						"format": "string"
					},
					"address": {
						"type": "string",
						"format": "string"
					},
					"city": {
						"type": "string",
						"format": "string"
					},
					"state": {
						"type": "string",
						"format": "string"
					},
					"zip": {
						"type": "string",
						"format": "string"
					}
				}
			},

		},
		"securitySchemas": {
			"ApiKeyAuth": {
				"type": "apiKey",
				"in": "header",
				"name": "Api-Key"
			}
		}
	}
}
